trigger MSD_CORE_PopulateSortOrderOnEditDCRLs on Data_Change_Request_Line_vod__c (before insert) {

   /* KRB 7/10/2015 REL 6.0 -Since we are using OOTB Veeva for DCR Edits, we need a process to populate the 
      Sort Order of the Field so that it displays properly in the GDGS Screens. Note: 
      Contact Center is using there own custom process for loading EDIT DCRs, so we will not touch 
      records generated by a Contact Center (service Cloud) user.
   */
   
   Set <id> DCRIdSet = new Set <id>();
   Map <id,User> creatorMap = new Map <id,User>();
   Set <id> userIdSet = new Set <id>();
   Map <id, Data_change_request_vod__c> relatedEditDCRs = new Map <id, Data_change_request_vod__c>();
   List <Id> DCRIdList = new List <Id>();
   List <MSD_CORE_NAW_Field_Types__c> NAWFieldTypesList_HBP = new List <MSD_CORE_NAW_Field_Types__c>();
   List <MSD_CORE_NAW_Field_Types__c> NAWFieldTypesList_HCP = new List <MSD_CORE_NAW_Field_Types__c>();
   List <MSD_CORE_NAW_Field_Types__c> NAWFieldTypesList_Org = new List <MSD_CORE_NAW_Field_Types__c>();
   List <MSD_CORE_NAW_Field_Types__c> NAWFieldTypesList_Pharm = new List <MSD_CORE_NAW_Field_Types__c>();
   List <MSD_CORE_NAW_Field_Types__c> NAWFieldTypesList_Hospital = new List <MSD_CORE_NAW_Field_Types__c>();
    
   for(Data_Change_Request_Line_vod__c dcrl: Trigger.new){
      //need to filter out the DCRL created by the Contact Center.
      DCRIdSet.add(dcrl.Data_Change_Request_vod__c);
   }
   
    for (Id x : DCRIdSet){
      DCRIdList.add(x); 
    } 
   
   //Pull all the DCR and Account Information for the given DCRL - NOTE, we only want Edit DCRs
   //[select Data_Change_Request_vod__r.Account_Record_Type__c, Data_Change_Request_vod__r.Account_vod__r.Class_of_Trade_MRK__c, Data_Change_Request_vod__r.Account_vod__r.Class_of_Trade_Sub_MRK__c, Data_Change_Request_vod__r.Account_vod__r.Class_of_Trade_Owner_MRK__c, Data_Change_Request_vod__r.Account_vod__r.IMS_Specialty_MRK__c, Account_Type__c, Data_Change_Request_vod__c, Display_Order__c, Error_vod__c, External_Field_API_Name_vod__c, Field_API_Name_vod__c, Field_Name_vod__c, Final_Value_vod__c, Id, Name, New_Localized_Value_vod__c, New_Value_vod__c, Old_Localized_Value_vod__c, Old_Value_vod__c from Data_Change_Request_Line_vod__c where Id in :Trigger.newMap.keySet() and Data_Change_Request_vod__r.Type_vod__c = 'Edit_vod']
   relatedEditDCRs = new Map <id, Data_change_request_vod__c>(
                     [SELECT Id,  Account_vod__r.RecordType.name, RecordType.name 
                      FROM Data_Change_Request_vod__c
                      WHERE Type_vod__c = 'Edit_vod'
                      AND RecordType.name != 'Child_Account_vod'
                      AND Id in :DCRIdList]);
    
    //If there are no Edit DCRs, Exit
    if (relatedEditDCRs.isEmpty()){
        return;
    }
    
    //If a Contact Center User caused the Trigger to Fire, Exit.
    String usrProfileName = [select u.Profile.Name from User u where u.id = :Userinfo.getUserId()].Profile.Name;
    String ProfileCC = System.Label.MSD_CORE_Contact_Center_Profiles;
    Boolean result = ProfileCC.contains(usrProfileName);
    if(result){
     return;
    }

    NAWFieldTypesList_HBP = new List <MSD_CORE_NAW_Field_Types__c>([
       Select Id, Active__c, Country_Code__c, Display_Order__c, 
              Field_API_Name__c,Object_API_Name__c,Record_Type__c  
       FROM   MSD_CORE_NAW_Field_Types__c
       WHERE  Profile__c = 'All Sales User Profiles'
       AND    Active__c = True
       AND    Country_Code__c = 'US'
       AND    Record_Type__c = 'HBP']
    );

    NAWFieldTypesList_HCP = new List <MSD_CORE_NAW_Field_Types__c>([
       Select Id, Active__c, Country_Code__c, Display_Order__c, 
              Field_API_Name__c,Object_API_Name__c,Record_Type__c  
       FROM   MSD_CORE_NAW_Field_Types__c
       WHERE  Profile__c = 'All Sales User Profiles'
       AND    Active__c = True
       AND    Country_Code__c = 'US'
       AND    Record_Type__c = 'HCP']
    );

    NAWFieldTypesList_Org = new List <MSD_CORE_NAW_Field_Types__c>([
       Select Id, Active__c, Country_Code__c, Display_Order__c, 
              Field_API_Name__c,Object_API_Name__c,Record_Type__c  
       FROM   MSD_CORE_NAW_Field_Types__c
       WHERE  Profile__c = 'All Sales User Profiles'
       AND    Active__c = True
       AND    Country_Code__c = 'US'
       AND    Record_Type__c = 'Organization_vod']
    );

    NAWFieldTypesList_Pharm = new List <MSD_CORE_NAW_Field_Types__c>([
       Select Id, Active__c, Country_Code__c, Display_Order__c, 
              Field_API_Name__c,Object_API_Name__c,Record_Type__c  
       FROM   MSD_CORE_NAW_Field_Types__c
       WHERE  Profile__c = 'All Sales User Profiles'
       AND    Active__c = True
       AND    Country_Code__c = 'US'
       AND    Record_Type__c = 'Pharmacy_vod']
    );

    NAWFieldTypesList_Hospital = new List <MSD_CORE_NAW_Field_Types__c>([
       Select Id, Active__c, Country_Code__c, Display_Order__c, 
              Field_API_Name__c,Object_API_Name__c,Record_Type__c  
       FROM   MSD_CORE_NAW_Field_Types__c
       WHERE  Profile__c = 'All Sales User Profiles'
       AND    Active__c = True
       AND    Country_Code__c = 'US'
       AND    Record_Type__c = 'Hospital_vod']
    );
    
    
   //main processing
   for(Data_Change_Request_Line_vod__c dcrl: Trigger.new){
       
       System.debug('KRB: Made it into Main Processing');
       if(relatedEditDCRs.containsKey(dcrl.Data_Change_Request_vod__c)){ //means it was an Edit Account or Address...
          String relatedDCRAccountRecordType = relatedEditDCRs.get(dcrl.Data_Change_Request_vod__c).Account_vod__r.RecordType.name;
          String relatedDCRRecordType = relatedEditDCRs.get(dcrl.Data_Change_Request_vod__c).RecordType.name;
       
           if (relatedDCRAccountRecordType == 'HBP' ){
                      System.debug('KRB: Made it into Main Processing with HBP');

               for (MSD_CORE_NAW_Field_Types__c NAWFieldType : NAWFieldTypesList_HBP){
                   if (NAWFieldType.Field_API_Name__c == dcrl.Field_API_Name_vod__c){
                       System.debug('KRB: Made it into Main Processing: found Match, setting Display Order:' +NAWFieldType.Display_Order__c );

                       dcrl.Display_Order__c = NAWFieldType.Display_Order__c;
                   }
               }
           }else if(relatedDCRAccountRecordType == 'HBP'){
               for (MSD_CORE_NAW_Field_Types__c NAWFieldType : NAWFieldTypesList_HBP){
                   if (NAWFieldType.Field_API_Name__c == dcrl.Field_API_Name_vod__c){
                       dcrl.Display_Order__c = NAWFieldType.Display_Order__c;
                   }
               }
           }else if(relatedDCRAccountRecordType == 'Organization_vod'){
               for (MSD_CORE_NAW_Field_Types__c NAWFieldType : NAWFieldTypesList_Org){
                   if (NAWFieldType.Field_API_Name__c == dcrl.Field_API_Name_vod__c){
                       dcrl.Display_Order__c = NAWFieldType.Display_Order__c;
                   }
               }
           }else if(relatedDCRAccountRecordType == 'Pharmacy_vod'){
               for (MSD_CORE_NAW_Field_Types__c NAWFieldType : NAWFieldTypesList_Pharm){
                   if (NAWFieldType.Field_API_Name__c == dcrl.Field_API_Name_vod__c){
                       dcrl.Display_Order__c = NAWFieldType.Display_Order__c;
                   }
               }
           }else if(relatedDCRAccountRecordType == 'Hospital_vod'){
               for (MSD_CORE_NAW_Field_Types__c NAWFieldType :  NAWFieldTypesList_Hospital){
                   if (NAWFieldType.Field_API_Name__c == dcrl.Field_API_Name_vod__c){
                       dcrl.Display_Order__c = NAWFieldType.Display_Order__c;
                   }
               }
           }
       
       
       
       
       
       }     
   }
}